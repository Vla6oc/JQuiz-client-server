/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author User
 */
public class Server extends javax.swing.JFrame {

    DataOutputStream out;
    DataInputStream in;
    ServerSocket server;
    Socket client;
    String port;
    Server.Potok p;

    /**
     * Creates new form Server
     */
    public Server() {
        
        initComponents();
         jTextArea1.append("Если от игрока 0, то вариант не правильный,\n");
         jTextArea1.append("если от игрока 1, то вариант правильный,\n");
         jTextArea1.append("а сервер отправляет ответ.\n\n");
    }

     private class Potok extends Thread 
    {
        @Override
        public void run()
        {

            try 
            {
                server= new ServerSocket(8080);
                showMessageDialog(null, "Сервер успешно запущен!", "Сервер", INFORMATION_MESSAGE);
                while (true) 
                {
                client=server.accept();
                //-------------------------------------------
                jTextArea1.append("Клиент подключен!\n");
                Q1 q1 = new Q1();
                q1.start();
                }
            } 
            catch (Exception ex) 
            {
                showMessageDialog(null, "Ошибка запуска сервера или сервер уже запущен", "Сервер", ERROR_MESSAGE);
            }
          
        }
    }
private class Send extends Thread 
{
        @Override
        public void run() {
             try {
           File f = new File("C:\\Users\\User\\Documents\\NetBeansProjects\\Сервер\\ДанныеСервера.txt"); 
            String fileName = f.getName();
            DataOutputStream outFileName = new DataOutputStream(client.getOutputStream());
            outFileName.writeUTF(fileName);
            FileInputStream in = new FileInputStream(f);
            OutputStream out = client.getOutputStream();
            byte[] bt = new byte[1024];
            while ((in.read(bt)) > 0) {
                out.write(bt);
            }
//            out.close();
//            in.close();
//            outFileName.close();
            System.out.println("File transfer complete");
 
        } catch (IOException e) {
            e.printStackTrace();
        }
        }
 }


public class Q1 extends Thread
    {
        @Override
        public void run ()
        {
            try 
            {
                while(true)
                {
                out = new DataOutputStream(client.getOutputStream());
                in = new DataInputStream(client.getInputStream());
                String str1 = in.readUTF();
                
                if ("1\n".equals(str1)) 
                {
                    String str2 = "true\n";
                    jTextArea1.append("Ответ игрока: " + str1);
                out.writeUTF(str2);
                out.flush();
                jTextArea1.append("Сервер: " + str2);
                }

                
                if ("0\n".equals(str1)) {
                    jTextArea1.append("Ответ игрока: " + str1);
                   String str2 = "false\n";
                 out.writeUTF(str2);
                out.flush();
                jTextArea1.append("Сервер: " + str2);
                }
                }
            }catch (Exception ex)
            {
            jTextArea1.append("Игрок вышел!\n\n");
            } 
            
        }
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(101, 101, 101));
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 10, 730, 310);

        jLabel1.setIcon(jLabel1.getIcon());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 19, 0, 0);

        jButton5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jButton5.setText("Отправить инф. с TextArea");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(390, 340, 250, 100);

        jButton4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\Клиент\\src\\KP\\+.png")); // NOI18N
        jButton4.setText("Запустить сервер");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(110, 340, 260, 100);

        getAccessibleContext().setAccessibleName("Сервер");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Potok p = new Potok();
        p.start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            File f = new File("ДанныеСервера.txt");
            try {
            FileWriter writer = new FileWriter(f);
            writer.write(jTextArea1.getText());
            writer.close();
                System.out.println("Good");
            
        } catch (Exception e) {
                System.out.println("error");
        }
            Send s = new Send();
            s.start();
            
    }//GEN-LAST:event_jButton5ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton4;
    public static javax.swing.JButton jButton5;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    }
